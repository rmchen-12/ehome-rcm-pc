// 收集各种正则表达式 供各业务使用 便于维护更改

/**
 * 手机号
 * 12开头的所有号码段(公司内用于测试的号码段)
 * 13开头的所有号码段
 * 14开头的有145、146、147、148、149
 * 15开头的除了154的都可以
 * 16开头的所有号码段
 * 17开头的所有号码段
 * 18开头的所有号码段
 * 19开头的有198、199
 */
const phone = /^((12[0-9])|(13[0-9])|(14[5-9])|(15[012356789])|(16[0-9])|(17[0-9])|(18[0-9])|(19[89]))\d{8}$/;

/**
 * 日期 yyyy-mm-dd 已考虑平闰年
 */
const date = {
	'yyyy-mm-dd': /^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/,
	'yyyy/mm/dd': /^(?:(?!0000)[0-9]{4}\/(?:(?:0[1-9]|1[0-2])\/(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])\/(?:29|30)|(?:0[13578]|1[02])\/31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)\/02\/29)$/,
	'yyyymmdd': /^(?:(?!0000)[0-9]{4}(?:(?:0[1-9]|1[0-2])(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])(?:29|30)|(?:0[13578]|1[02])31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)0229)$/
};

// 18位身份证号校验
const idNo = /^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}([0-9]|X)$/;

/**
 * 邮箱地址
 * 1. @之前必须有内容且只能是字母（大小写）、数字、下划线(_)、减号（-）、点（.）
 * 2. @和最后一个点（.）之间必须有内容且只能是字母（大小写）、数字、点（.）、减号（-），且两个点不能挨着
 * 3. 最后一个点（.）之后必须有内容且内容只能是字母（大小写）、数字且长度为大于等于2个字节，小于等于6个字节
 */
const email = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z0-9]{2,6}$/;

const regexps = { phone, date, idNo, email };

export default regexps;
